Run tests:


21 School


VERTER is watching your code...Â¯\_(*_*)_/Â¯

-------------------------------------------------------------------------------

Style test

Style test output:
 Style test: OK
1
Style test result: 1
-------------------------------------------------------------------------------

Part: matrix

Build output:
 gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c core/helpers.c  -o core/helpers.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/calc_complements.c  -o source/calc_complements.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/create_matrix.c  -o source/create_matrix.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/determinant.c  -o source/determinant.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/eq_matrix.c  -o source/eq_matrix.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/inverse_matrix.c  -o source/inverse_matrix.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/mult_matrix.c  -o source/mult_matrix.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/mult_number.c  -o source/mult_number.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/remove_matrix.c  -o source/remove_matrix.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/sub_matrix.c  -o source/sub_matrix.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/sum_matrix.c  -o source/sum_matrix.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/transpose.c  -o source/transpose.o
ar -rc s21_matrix.a  core/helpers.o  source/calc_complements.o  source/create_matrix.o  source/determinant.o  source/eq_matrix.o  source/inverse_matrix.o  source/mult_matrix.o  source/mult_number.o  source/remove_matrix.o  source/sub_matrix.o  source/sum_matrix.o  source/transpose.o
gcc -c test_matrix.c
gcc -c main.c
gcc -o unit_test test_matrix.o main.o ../../src/s21_matrix.a -lm

Project build: OK
1
Build result: 1
-------------------------------------------------------------------------------

Test number: 0, name: eq_matrix

Test output:
Functional test output: True
Memory test output:
==125== Memcheck, a memory error detector
==125== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==125== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==125== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test eq_matrix
==125==
==125== Conditional jump or move depends on uninitialised value(s)
==125==    at 0x110522: s21_eq_matrix (eq_matrix.c:12)
==125==    by 0x1095D8: test_eq_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==125==    by 0x10FF7E: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==125==
==125== Conditional jump or move depends on uninitialised value(s)
==125==    at 0x110522: s21_eq_matrix (eq_matrix.c:12)
==125==    by 0x109F69: test_eq_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==125==    by 0x10FF7E: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==125==
==125==
==125== HEAP SUMMARY:
==125==     in use at exit: 0 bytes in 0 blocks
==125==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==125==
==125== All heap blocks were freed -- no leaks are possible
==125==
==125== Use --track-origins=yes to see where uninitialised values come from
==125== For lists of detected and suppressed errors, rerun with: -s
==125== ERROR SUMMARY: 17 errors from 2 contexts (suppressed: 0 from 0)

Test result for the function s21_eq_matrix: OK

Memory test: FAIL
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 1, name: sum_matrix

Test output:
Functional test output: True
Memory test output:
==131== Memcheck, a memory error detector
==131== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==131== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==131== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test sum_matrix
==131==
==131== Conditional jump or move depends on uninitialised value(s)
==131==    at 0x110522: s21_eq_matrix (eq_matrix.c:12)
==131==    by 0x10A4DB: test_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==131==    by 0x10FFB1: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==131==
==131== Conditional jump or move depends on uninitialised value(s)
==131==    at 0x110522: s21_eq_matrix (eq_matrix.c:12)
==131==    by 0x10A99D: test_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==131==    by 0x10FFB1: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==131==
==131== Conditional jump or move depends on uninitialised value(s)
==131==    at 0x110522: s21_eq_matrix (eq_matrix.c:12)
==131==    by 0x10AE62: test_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==131==    by 0x10FFB1: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==131==
==131==
==131== HEAP SUMMARY:
==131==     in use at exit: 0 bytes in 0 blocks
==131==   total heap usage: 3 allocs, 3 frees, 232 bytes allocated
==131==
==131== All heap blocks were freed -- no leaks are possible
==131==
==131== Use --track-origins=yes to see where uninitialised values come from
==131== For lists of detected and suppressed errors, rerun with: -s
==131== ERROR SUMMARY: 12 errors from 3 contexts (suppressed: 0 from 0)

Test result for the function s21_sum_matrix: OK

Memory test: FAIL
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 2, name: sub_matrix

Test output:
Functional test output: True
Memory test output:
==137== Memcheck, a memory error detector
==137== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==137== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==137== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test sub_matrix
==137==
==137== Conditional jump or move depends on uninitialised value(s)
==137==    at 0x110522: s21_eq_matrix (eq_matrix.c:12)
==137==    by 0x10B3BF: test_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==137==    by 0x10FFE4: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==137==
==137== Conditional jump or move depends on uninitialised value(s)
==137==    at 0x110522: s21_eq_matrix (eq_matrix.c:12)
==137==    by 0x10B899: test_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==137==    by 0x10FFE4: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==137==
==137== Conditional jump or move depends on uninitialised value(s)
==137==    at 0x110522: s21_eq_matrix (eq_matrix.c:12)
==137==    by 0x10BD76: test_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==137==    by 0x10FFE4: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==137==
==137==
==137== HEAP SUMMARY:
==137==     in use at exit: 0 bytes in 0 blocks
==137==   total heap usage: 3 allocs, 3 frees, 232 bytes allocated
==137==
==137== All heap blocks were freed -- no leaks are possible
==137==
==137== Use --track-origins=yes to see where uninitialised values come from
==137== For lists of detected and suppressed errors, rerun with: -s
==137== ERROR SUMMARY: 12 errors from 3 contexts (suppressed: 0 from 0)

Test result for the function s21_sub_matrix: OK

Memory test: FAIL
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 3, name: mult_number

Test output:
Functional test output: True
Memory test output:
==143== Memcheck, a memory error detector
==143== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==143== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==143== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test mult_number
==143==
==143== Conditional jump or move depends on uninitialised value(s)
==143==    at 0x110A9B: s21_mult_number (mult_number.c:16)
==143==    by 0x10BFCE: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==143==    by 0x110017: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==143==
==143== Conditional jump or move depends on uninitialised value(s)
==143==    at 0x110AFC: s21_mult_number (mult_number.c:21)
==143==    by 0x10BFCE: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==143==    by 0x110017: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==143==
==143== Conditional jump or move depends on uninitialised value(s)
==143==    at 0x110522: s21_eq_matrix (eq_matrix.c:12)
==143==    by 0x10C16A: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==143==    by 0x110017: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==143==
==143== Conditional jump or move depends on uninitialised value(s)
==143==    at 0x110A9B: s21_mult_number (mult_number.c:16)
==143==    by 0x10C330: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==143==    by 0x110017: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==143==
==143== Conditional jump or move depends on uninitialised value(s)
==143==    at 0x110AFC: s21_mult_number (mult_number.c:21)
==143==    by 0x10C330: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==143==    by 0x110017: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==143==
==143== Conditional jump or move depends on uninitialised value(s)
==143==    at 0x110522: s21_eq_matrix (eq_matrix.c:12)
==143==    by 0x10C4B5: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==143==    by 0x110017: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==143==
==143== Conditional jump or move depends on uninitialised value(s)
==143==    at 0x110A9B: s21_mult_number (mult_number.c:16)
==143==    by 0x10C67C: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==143==    by 0x110017: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==143==
==143== Conditional jump or move depends on uninitialised value(s)
==143==    at 0x110AFC: s21_mult_number (mult_number.c:21)
==143==    by 0x10C67C: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==143==    by 0x110017: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==143==
==143== Conditional jump or move depends on uninitialised value(s)
==143==    at 0x110522: s21_eq_matrix (eq_matrix.c:12)
==143==    by 0x10C819: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==143==    by 0x110017: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==143==
==143==
==143== HEAP SUMMARY:
==143==     in use at exit: 0 bytes in 0 blocks
==143==   total heap usage: 3 allocs, 3 frees, 232 bytes allocated
==143==
==143== All heap blocks were freed -- no leaks are possible
==143==
==143== Use --track-origins=yes to see where uninitialised values come from
==143== For lists of detected and suppressed errors, rerun with: -s
==143== ERROR SUMMARY: 36 errors from 9 contexts (suppressed: 0 from 0)

Test result for the function s21_mult_number: OK

Memory test: FAIL
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 4, name: mult_matrix

Test output:
Functional test output: False
Memory test output:
==149== Memcheck, a memory error detector
==149== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==149== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==149== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test mult_matrix
==149==
==149== Conditional jump or move depends on uninitialised value(s)
==149==    at 0x110522: s21_eq_matrix (eq_matrix.c:12)
==149==    by 0x10CDC1: test_mult_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==149==    by 0x11004A: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==149==
==149== Conditional jump or move depends on uninitialised value(s)
==149==    at 0x110522: s21_eq_matrix (eq_matrix.c:12)
==149==    by 0x10D1EB: test_mult_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==149==    by 0x11004A: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==149==
==149== Conditional jump or move depends on uninitialised value(s)
==149==    at 0x110522: s21_eq_matrix (eq_matrix.c:12)
==149==    by 0x10D6DA: test_mult_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==149==    by 0x11004A: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==149==
==149==
==149== HEAP SUMMARY:
==149==     in use at exit: 0 bytes in 0 blocks
==149==   total heap usage: 3 allocs, 3 frees, 208 bytes allocated
==149==
==149== All heap blocks were freed -- no leaks are possible
==149==
==149== Use --track-origins=yes to see where uninitialised values come from
==149== For lists of detected and suppressed errors, rerun with: -s
==149== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)

Test result for the function s21_mult_matrix: FAIL

Memory test: FAIL
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 5, name: transpose

Test output:
Functional test output: False
Memory test output:
==155== Memcheck, a memory error detector
==155== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==155== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==155== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test transpose
==155==
==155== Conditional jump or move depends on uninitialised value(s)
==155==    at 0x110FC7: s21_transpose (transpose.c:17)
==155==    by 0x10D926: test_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==155==    by 0x11007D: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==155==
==155== Conditional jump or move depends on uninitialised value(s)
==155==    at 0x110522: s21_eq_matrix (eq_matrix.c:12)
==155==    by 0x10DAC2: test_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==155==    by 0x11007D: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==155==
==155== Conditional jump or move depends on uninitialised value(s)
==155==    at 0x110FC7: s21_transpose (transpose.c:17)
==155==    by 0x10DC7C: test_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==155==    by 0x11007D: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==155==
==155== Conditional jump or move depends on uninitialised value(s)
==155==    at 0x110522: s21_eq_matrix (eq_matrix.c:12)
==155==    by 0x10DE19: test_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==155==    by 0x11007D: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==155==
==155== Conditional jump or move depends on uninitialised value(s)
==155==    at 0x110FC7: s21_transpose (transpose.c:17)
==155==    by 0x10DFD4: test_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==155==    by 0x11007D: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==155==
==155==
==155== HEAP SUMMARY:
==155==     in use at exit: 0 bytes in 0 blocks
==155==   total heap usage: 3 allocs, 3 frees, 232 bytes allocated
==155==
==155== All heap blocks were freed -- no leaks are possible
==155==
==155== Use --track-origins=yes to see where uninitialised values come from
==155== For lists of detected and suppressed errors, rerun with: -s
==155== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)

Test result for the function s21_transpose: FAIL

Memory test: FAIL
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 6, name: calc_complements

Test output:
Functional test output: False
Memory test output:
==161== Memcheck, a memory error detector
==161== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==161== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==161== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test calc_complements
==161==
==161== Conditional jump or move depends on uninitialised value(s)
==161==    at 0x110522: s21_eq_matrix (eq_matrix.c:12)
==161==    by 0x10F72E: test_calc_complements (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==161==    by 0x1100B0: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==161==
==161==
==161== HEAP SUMMARY:
==161==     in use at exit: 0 bytes in 0 blocks
==161==   total heap usage: 80 allocs, 80 frees, 4,640 bytes allocated
==161==
==161== All heap blocks were freed -- no leaks are possible
==161==
==161== Use --track-origins=yes to see where uninitialised values come from
==161== For lists of detected and suppressed errors, rerun with: -s
==161== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Test result for the function s21_calc_complements: FAIL

Memory test: FAIL
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 7, name: determinant

Test output:
Functional test output: True
Memory test output:
==167== Memcheck, a memory error detector
==167== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==167== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==167== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test determinant
==167==
==167==
==167== HEAP SUMMARY:
==167==     in use at exit: 0 bytes in 0 blocks
==167==   total heap usage: 19 allocs, 19 frees, 1,104 bytes allocated
==167==
==167== All heap blocks were freed -- no leaks are possible
==167==
==167== For lists of detected and suppressed errors, rerun with: -s
==167== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Test result for the function s21_determinant: OK

Memory test: OK
1
Test result: 1
-------------------------------------------------------------------------------

Test number: 8, name: inverse_matrix

Test output:
Functional test output: False
Memory test output:
==173== Memcheck, a memory error detector
==173== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==173== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==173== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test inverse_matrix
==173==
==173== Conditional jump or move depends on uninitialised value(s)
==173==    at 0x110522: s21_eq_matrix (eq_matrix.c:12)
==173==    by 0x10EB9D: test_inverse_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==173==    by 0x110110: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==173==
==173==
==173== HEAP SUMMARY:
==173==     in use at exit: 0 bytes in 0 blocks
==173==   total heap usage: 107 allocs, 107 frees, 6,384 bytes allocated
==173==
==173== All heap blocks were freed -- no leaks are possible
==173==
==173== Use --track-origins=yes to see where uninitialised values come from
==173== For lists of detected and suppressed errors, rerun with: -s
==173== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Test result for the function s21_inverse_matrix: FAIL

Memory test: FAIL
0
Test result: 0
-------------------------------------------------------------------------------
