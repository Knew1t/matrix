Run tests:


21 School


VERTER is watching your code...Â¯\_(*_*)_/Â¯

-------------------------------------------------------------------------------

Style test

Style test output:
 Style test: OK
1
Style test result: 1
-------------------------------------------------------------------------------

Part: matrix

Build output:
 gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c core/helpers.c  -o core/helpers.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/calc_complements.c  -o source/calc_complements.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/create_matrix.c  -o source/create_matrix.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/determinant.c  -o source/determinant.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/eq_matrix.c  -o source/eq_matrix.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/inverse_matrix.c  -o source/inverse_matrix.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/mult_matrix.c  -o source/mult_matrix.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/mult_number.c  -o source/mult_number.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/remove_matrix.c  -o source/remove_matrix.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/sub_matrix.c  -o source/sub_matrix.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/sum_matrix.c  -o source/sum_matrix.o
gcc   -g -MD  -Wall -Werror -Wextra -std=c11 -pedantic  -lm -c source/transpose.c  -o source/transpose.o
ar -rc s21_matrix.a  core/helpers.o  source/calc_complements.o  source/create_matrix.o  source/determinant.o  source/eq_matrix.o  source/inverse_matrix.o  source/mult_matrix.o  source/mult_number.o  source/remove_matrix.o  source/sub_matrix.o  source/sum_matrix.o  source/transpose.o
gcc -c test_matrix.c
gcc -c main.c
gcc -o unit_test test_matrix.o main.o ../../src/s21_matrix.a -lm

Project build: OK
1
Build result: 1
-------------------------------------------------------------------------------

Test number: 0, name: eq_matrix

Test output:
Functional test output: True
Memory test output:
==124== Memcheck, a memory error detector
==124== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==124== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==124== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test eq_matrix
==124==
==124== Conditional jump or move depends on uninitialised value(s)
==124==    at 0x1105B0: s21_eq_matrix (eq_matrix.c:14)
==124==    by 0x1095E8: test_eq_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==124==    by 0x10FF8E: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==124==
==124== Conditional jump or move depends on uninitialised value(s)
==124==    at 0x1105B0: s21_eq_matrix (eq_matrix.c:14)
==124==    by 0x109F79: test_eq_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==124==    by 0x10FF8E: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==124==
==124==
==124== HEAP SUMMARY:
==124==     in use at exit: 0 bytes in 0 blocks
==124==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==124==
==124== All heap blocks were freed -- no leaks are possible
==124==
==124== Use --track-origins=yes to see where uninitialised values come from
==124== For lists of detected and suppressed errors, rerun with: -s
==124== ERROR SUMMARY: 17 errors from 2 contexts (suppressed: 0 from 0)

Test result for the function s21_eq_matrix: OK

Memory test: FAIL
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 1, name: sum_matrix

Test output:
Functional test output: True
Memory test output:
==130== Memcheck, a memory error detector
==130== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==130== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==130== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test sum_matrix
==130==
==130== Conditional jump or move depends on uninitialised value(s)
==130==    at 0x1105B0: s21_eq_matrix (eq_matrix.c:14)
==130==    by 0x10A4EB: test_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==130==    by 0x10FFC1: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==130==
==130== Conditional jump or move depends on uninitialised value(s)
==130==    at 0x1105B0: s21_eq_matrix (eq_matrix.c:14)
==130==    by 0x10A9AD: test_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==130==    by 0x10FFC1: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==130==
==130== Conditional jump or move depends on uninitialised value(s)
==130==    at 0x1105B0: s21_eq_matrix (eq_matrix.c:14)
==130==    by 0x10AE72: test_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==130==    by 0x10FFC1: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==130==
==130==
==130== HEAP SUMMARY:
==130==     in use at exit: 0 bytes in 0 blocks
==130==   total heap usage: 3 allocs, 3 frees, 232 bytes allocated
==130==
==130== All heap blocks were freed -- no leaks are possible
==130==
==130== Use --track-origins=yes to see where uninitialised values come from
==130== For lists of detected and suppressed errors, rerun with: -s
==130== ERROR SUMMARY: 12 errors from 3 contexts (suppressed: 0 from 0)

Test result for the function s21_sum_matrix: OK

Memory test: FAIL
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 2, name: sub_matrix

Test output:
Functional test output: True
Memory test output:
==136== Memcheck, a memory error detector
==136== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==136== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==136== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test sub_matrix
==136==
==136== Conditional jump or move depends on uninitialised value(s)
==136==    at 0x1105B0: s21_eq_matrix (eq_matrix.c:14)
==136==    by 0x10B3CF: test_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==136==    by 0x10FFF4: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==136==
==136== Conditional jump or move depends on uninitialised value(s)
==136==    at 0x1105B0: s21_eq_matrix (eq_matrix.c:14)
==136==    by 0x10B8A9: test_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==136==    by 0x10FFF4: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==136==
==136== Conditional jump or move depends on uninitialised value(s)
==136==    at 0x1105B0: s21_eq_matrix (eq_matrix.c:14)
==136==    by 0x10BD86: test_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==136==    by 0x10FFF4: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==136==
==136==
==136== HEAP SUMMARY:
==136==     in use at exit: 0 bytes in 0 blocks
==136==   total heap usage: 3 allocs, 3 frees, 232 bytes allocated
==136==
==136== All heap blocks were freed -- no leaks are possible
==136==
==136== Use --track-origins=yes to see where uninitialised values come from
==136== For lists of detected and suppressed errors, rerun with: -s
==136== ERROR SUMMARY: 12 errors from 3 contexts (suppressed: 0 from 0)

Test result for the function s21_sub_matrix: OK

Memory test: FAIL
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 3, name: mult_number

Test output:
Functional test output: True
Memory test output:
==142== Memcheck, a memory error detector
==142== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==142== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==142== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test mult_number
==142==
==142== Conditional jump or move depends on uninitialised value(s)
==142==    at 0x1105B0: s21_eq_matrix (eq_matrix.c:14)
==142==    by 0x10C17A: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==142==    by 0x110027: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==142==
==142== Conditional jump or move depends on uninitialised value(s)
==142==    at 0x1105B0: s21_eq_matrix (eq_matrix.c:14)
==142==    by 0x10C4C5: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==142==    by 0x110027: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==142==
==142== Conditional jump or move depends on uninitialised value(s)
==142==    at 0x1105B0: s21_eq_matrix (eq_matrix.c:14)
==142==    by 0x10C829: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==142==    by 0x110027: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==142==
==142==
==142== HEAP SUMMARY:
==142==     in use at exit: 0 bytes in 0 blocks
==142==   total heap usage: 3 allocs, 3 frees, 232 bytes allocated
==142==
==142== All heap blocks were freed -- no leaks are possible
==142==
==142== Use --track-origins=yes to see where uninitialised values come from
==142== For lists of detected and suppressed errors, rerun with: -s
==142== ERROR SUMMARY: 12 errors from 3 contexts (suppressed: 0 from 0)

Test result for the function s21_mult_number: OK

Memory test: FAIL
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 4, name: mult_matrix

Test output:
Functional test output: False
Memory test output:
==148== Memcheck, a memory error detector
==148== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==148== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==148== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test mult_matrix
==148==
==148== Conditional jump or move depends on uninitialised value(s)
==148==    at 0x1105B0: s21_eq_matrix (eq_matrix.c:14)
==148==    by 0x10CDD1: test_mult_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==148==    by 0x11005A: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==148==
==148== Conditional jump or move depends on uninitialised value(s)
==148==    at 0x1105B0: s21_eq_matrix (eq_matrix.c:14)
==148==    by 0x10D1FB: test_mult_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==148==    by 0x11005A: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==148==
==148== Conditional jump or move depends on uninitialised value(s)
==148==    at 0x1105B0: s21_eq_matrix (eq_matrix.c:14)
==148==    by 0x10D6EA: test_mult_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==148==    by 0x11005A: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==148==
==148==
==148== HEAP SUMMARY:
==148==     in use at exit: 0 bytes in 0 blocks
==148==   total heap usage: 3 allocs, 3 frees, 208 bytes allocated
==148==
==148== All heap blocks were freed -- no leaks are possible
==148==
==148== Use --track-origins=yes to see where uninitialised values come from
==148== For lists of detected and suppressed errors, rerun with: -s
==148== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)

Test result for the function s21_mult_matrix: FAIL

Memory test: FAIL
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 5, name: transpose

Test output:
Functional test output: False
Memory test output:
==154== Memcheck, a memory error detector
==154== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==154== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==154== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test transpose
==154==
==154== Conditional jump or move depends on uninitialised value(s)
==154==    at 0x1105B0: s21_eq_matrix (eq_matrix.c:14)
==154==    by 0x10DAD2: test_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==154==    by 0x11008D: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==154==
==154== Conditional jump or move depends on uninitialised value(s)
==154==    at 0x1105B0: s21_eq_matrix (eq_matrix.c:14)
==154==    by 0x10DE29: test_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==154==    by 0x11008D: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==154==
==154==
==154== HEAP SUMMARY:
==154==     in use at exit: 0 bytes in 0 blocks
==154==   total heap usage: 3 allocs, 3 frees, 232 bytes allocated
==154==
==154== All heap blocks were freed -- no leaks are possible
==154==
==154== Use --track-origins=yes to see where uninitialised values come from
==154== For lists of detected and suppressed errors, rerun with: -s
==154== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Test result for the function s21_transpose: FAIL

Memory test: FAIL
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 6, name: calc_complements

Test output:
Functional test output: False
Memory test output:
==160== Memcheck, a memory error detector
==160== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==160== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==160== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test calc_complements
==160==
==160== Conditional jump or move depends on uninitialised value(s)
==160==    at 0x1105B0: s21_eq_matrix (eq_matrix.c:14)
==160==    by 0x10F73E: test_calc_complements (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==160==    by 0x1100C0: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==160==
==160==
==160== HEAP SUMMARY:
==160==     in use at exit: 0 bytes in 0 blocks
==160==   total heap usage: 80 allocs, 80 frees, 4,640 bytes allocated
==160==
==160== All heap blocks were freed -- no leaks are possible
==160==
==160== Use --track-origins=yes to see where uninitialised values come from
==160== For lists of detected and suppressed errors, rerun with: -s
==160== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Test result for the function s21_calc_complements: FAIL

Memory test: FAIL
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 7, name: determinant

Test output:
Functional test output: True
Memory test output:
==166== Memcheck, a memory error detector
==166== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==166== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==166== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test determinant
==166==
==166==
==166== HEAP SUMMARY:
==166==     in use at exit: 0 bytes in 0 blocks
==166==   total heap usage: 19 allocs, 19 frees, 1,104 bytes allocated
==166==
==166== All heap blocks were freed -- no leaks are possible
==166==
==166== For lists of detected and suppressed errors, rerun with: -s
==166== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Test result for the function s21_determinant: OK

Memory test: OK
1
Test result: 1
-------------------------------------------------------------------------------

Test number: 8, name: inverse_matrix

Test output:
Functional test output: False
Memory test output:
==172== Memcheck, a memory error detector
==172== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==172== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==172== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test inverse_matrix
==172==
==172== Conditional jump or move depends on uninitialised value(s)
==172==    at 0x1105B0: s21_eq_matrix (eq_matrix.c:14)
==172==    by 0x10EBAD: test_inverse_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==172==    by 0x110120: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==172==
==172==
==172== HEAP SUMMARY:
==172==     in use at exit: 0 bytes in 0 blocks
==172==   total heap usage: 107 allocs, 107 frees, 6,384 bytes allocated
==172==
==172== All heap blocks were freed -- no leaks are possible
==172==
==172== Use --track-origins=yes to see where uninitialised values come from
==172== For lists of detected and suppressed errors, rerun with: -s
==172== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Test result for the function s21_inverse_matrix: FAIL

Memory test: FAIL
0
Test result: 0
-------------------------------------------------------------------------------


